buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            url "http://repo.ehdev.io/maven2"
        }
    }
    dependencies {
        classpath 'io.ehdev.conrad:gradle-plugin:+'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:3.2.0'
    }
}

allprojects {
    apply plugin: 'idea'
    group = 'io.ehdev.conrad'
}

apply from: "gradle/versions.gradle"
apply plugin: 'version-manager'

versionManager {
    repoId = '3e79966b-a630-4efa-901b-8819c929c5e3'
    token = '08A7jgz3PYAcBFh9yZNY8PmsrnNxpEyHU4mgeTYFsntHDno6yRPMkvk7RuOR'
    providerBaseUrl = 'http://api.ehdev.io'
}

subprojects {
    buildDir = new File(rootProject.getProjectDir(), "build/${project.name}")
    apply plugin: 'java'

    repositories {
        mavenCentral()
        maven {
            url 'http://repo.spring.io/milestone'
        }
    }

    sourceCompatibility = '1.8'

    if(project.name != 'test-utils') {
        dependencies {
            testCompile project(':test-utils')
        }
    }

    test {
        useJUnit {
            excludeCategories 'io.ehdev.conrad.test.IntegrationTestGroup'
        }
    }

    def integTest = tasks.create('integTest', Test) {
        shouldRunAfter(tasks.test)
        reports.html.destination = file("$buildDir/reports/intTests")
        useJUnit {
            includeCategories 'io.ehdev.conrad.test.IntegrationTestGroup'
        }
    }

    tasks.withType(Test) {
        testLogging {
            afterSuite { desc, result ->
                if (!desc.parent) { // will match the outermost suite
                    println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                }
            }
        }
    }

    tasks.check.dependsOn(integTest)
}

idea.project.ipr {
    withXml { provider ->
        provider.node.component
                .find { it.@name == 'VcsDirectoryMappings' }
                .mapping.@vcs = 'Git'
    }
}
