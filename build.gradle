plugins {
    id 'com.gradle.build-scan' version '1.6'
    id 'tech.crom.version-manager' version 'LATEST'
    id 'io.ehdev.gradle.dependency-script' version 'LATEST'
    id "org.jetbrains.kotlin.jvm" version "1.1.2" apply false
    id 'io.ehdev.gradle.dependency-resolve' version 'LATEST' apply false
    id 'io.ehdev.gradle.build-dir' version 'LATEST' apply false
    id 'io.ehdev.gradle.klint' version 'LATEST' apply false
    id "org.springframework.boot" version "1.5.3.RELEASE" apply false
    id "org.flywaydb.flyway" version "4.2.0" apply false
    id 'base'
    id 'jacoco'
}

buildScan {
    licenseAgreementUrl = 'https://gradle.com/terms-of-service'
    licenseAgree = 'yes'

    publishAlways()
}

allprojects {
    apply plugin: 'idea'

    group = 'crom.tech'

    repositories {
        mavenCentral()
        jcenter()
        mavenLocal()
        maven {
            url 'http://repo.spring.io/milestone'
        }
        maven {
            url "http://repository.jetbrains.com/all"
        }
    }

    apply from: "$rootDir/gradle/versions.gradle"
}

subprojects {
    tasks.create('allDeps', DependencyReportTask)
}

versionManager {
    projectName = 'ethankhall'
    repoName = 'version-manager'
}

apply from: "gradle/database.gradle"

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.ehdev.gradle.dependency-resolve'
    apply plugin: 'io.ehdev.gradle.build-dir'

    tasks.withType(Test) { test ->
        test.maxHeapSize = '512m'
        test.environment 'SPRING_DATASOURCE_DBNAME', database.name
        test.environment 'SPRING_DATASOURCE_URL', database.url
        test.environment 'SPRING_DATASOURCE_USERNAME', database.user
        test.environment 'SPRING_DATASOURCE_PASSWORD', database.password
    }

    plugins.withType(org.jetbrains.kotlin.gradle.plugin.KotlinPluginWrapper) {
        plugins.apply('io.ehdev.gradle.klint')
    }

    ext['libraries'] = deps.libraries
}

idea.project.ipr {
    withXml { provider ->
        provider.node.component
            .find { it.@name == 'VcsDirectoryMappings' }
            .mapping.@vcs = 'Git'
    }
}

apply from: "gradle/coverage.gradle"
