/**
 * This class is generated by jOOQ
 */
package io.ehdev.conrad.db.tables.records;


import io.ehdev.conrad.db.tables.UserToken;

import java.sql.Timestamp;
import java.util.UUID;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "user_token", schema = "public")
public class UserTokenRecord extends UpdatableRecordImpl<UserTokenRecord> implements Record6<UUID, UUID, Timestamp, Timestamp, Boolean, String> {

	private static final long serialVersionUID = 603850750;

	/**
	 * Setter for <code>public.user_token.uuid</code>.
	 */
	public void setUuid(UUID value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.user_token.uuid</code>.
	 */
	@Id
	@Column(name = "uuid", unique = true, nullable = false)
	@NotNull
	public UUID getUuid() {
		return (UUID) getValue(0);
	}

	/**
	 * Setter for <code>public.user_token.user_uuid</code>.
	 */
	public void setUserUuid(UUID value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.user_token.user_uuid</code>.
	 */
	@Column(name = "user_uuid", nullable = false)
	@NotNull
	public UUID getUserUuid() {
		return (UUID) getValue(1);
	}

	/**
	 * Setter for <code>public.user_token.created_at</code>.
	 */
	public void setCreatedAt(Timestamp value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.user_token.created_at</code>.
	 */
	@Column(name = "created_at", nullable = false)
	@NotNull
	public Timestamp getCreatedAt() {
		return (Timestamp) getValue(2);
	}

	/**
	 * Setter for <code>public.user_token.expires_at</code>.
	 */
	public void setExpiresAt(Timestamp value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.user_token.expires_at</code>.
	 */
	@Column(name = "expires_at")
	public Timestamp getExpiresAt() {
		return (Timestamp) getValue(3);
	}

	/**
	 * Setter for <code>public.user_token.valid</code>.
	 */
	public void setValid(Boolean value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>public.user_token.valid</code>.
	 */
	@Column(name = "valid")
	public Boolean getValid() {
		return (Boolean) getValue(4);
	}

	/**
	 * Setter for <code>public.user_token.token_type</code>.
	 */
	public void setTokenType(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>public.user_token.token_type</code>.
	 */
	@Column(name = "token_type", nullable = false, length = 5)
	@NotNull
	@Size(max = 5)
	public String getTokenType() {
		return (String) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<UUID> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<UUID, UUID, Timestamp, Timestamp, Boolean, String> fieldsRow() {
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<UUID, UUID, Timestamp, Timestamp, Boolean, String> valuesRow() {
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field1() {
		return UserToken.USER_TOKEN.UUID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field2() {
		return UserToken.USER_TOKEN.USER_UUID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field3() {
		return UserToken.USER_TOKEN.CREATED_AT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field4() {
		return UserToken.USER_TOKEN.EXPIRES_AT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field5() {
		return UserToken.USER_TOKEN.VALID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return UserToken.USER_TOKEN.TOKEN_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value1() {
		return getUuid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value2() {
		return getUserUuid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value3() {
		return getCreatedAt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value4() {
		return getExpiresAt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value5() {
		return getValid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getTokenType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserTokenRecord value1(UUID value) {
		setUuid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserTokenRecord value2(UUID value) {
		setUserUuid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserTokenRecord value3(Timestamp value) {
		setCreatedAt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserTokenRecord value4(Timestamp value) {
		setExpiresAt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserTokenRecord value5(Boolean value) {
		setValid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserTokenRecord value6(String value) {
		setTokenType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserTokenRecord values(UUID value1, UUID value2, Timestamp value3, Timestamp value4, Boolean value5, String value6) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached UserTokenRecord
	 */
	public UserTokenRecord() {
		super(UserToken.USER_TOKEN);
	}

	/**
	 * Create a detached, initialised UserTokenRecord
	 */
	public UserTokenRecord(UUID uuid, UUID userUuid, Timestamp createdAt, Timestamp expiresAt, Boolean valid, String tokenType) {
		super(UserToken.USER_TOKEN);

		setValue(0, uuid);
		setValue(1, userUuid);
		setValue(2, createdAt);
		setValue(3, expiresAt);
		setValue(4, valid);
		setValue(5, tokenType);
	}
}
