/**
 * This class is generated by jOOQ
 */
package io.ehdev.conrad.db.tables.records;


import io.ehdev.conrad.db.tables.CommitMetadata;

import java.sql.Timestamp;
import java.util.UUID;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "commit_metadata", schema = "public", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"name", "commit_uuid"})
})
public class CommitMetadataRecord extends UpdatableRecordImpl<CommitMetadataRecord> implements Record7<UUID, UUID, UUID, String, String, Timestamp, Timestamp> {

	private static final long serialVersionUID = -1926350939;

	/**
	 * Setter for <code>public.commit_metadata.uuid</code>.
	 */
	public void setUuid(UUID value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.commit_metadata.uuid</code>.
	 */
	@Id
	@Column(name = "uuid", unique = true, nullable = false)
	@NotNull
	public UUID getUuid() {
		return (UUID) getValue(0);
	}

	/**
	 * Setter for <code>public.commit_metadata.commit_uuid</code>.
	 */
	public void setCommitUuid(UUID value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.commit_metadata.commit_uuid</code>.
	 */
	@Column(name = "commit_uuid")
	public UUID getCommitUuid() {
		return (UUID) getValue(1);
	}

	/**
	 * Setter for <code>public.commit_metadata.repo_details_uuid</code>.
	 */
	public void setRepoDetailsUuid(UUID value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.commit_metadata.repo_details_uuid</code>.
	 */
	@Column(name = "repo_details_uuid")
	public UUID getRepoDetailsUuid() {
		return (UUID) getValue(2);
	}

	/**
	 * Setter for <code>public.commit_metadata.name</code>.
	 */
	public void setName(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.commit_metadata.name</code>.
	 */
	@Column(name = "name", nullable = false, length = 255)
	@NotNull
	@Size(max = 255)
	public String getName() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>public.commit_metadata.text</code>.
	 */
	public void setText(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>public.commit_metadata.text</code>.
	 */
	@Column(name = "text", nullable = false, length = 1048576)
	@NotNull
	@Size(max = 1048576)
	public String getText() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>public.commit_metadata.created_at</code>.
	 */
	public void setCreatedAt(Timestamp value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>public.commit_metadata.created_at</code>.
	 */
	@Column(name = "created_at", nullable = false)
	@NotNull
	public Timestamp getCreatedAt() {
		return (Timestamp) getValue(5);
	}

	/**
	 * Setter for <code>public.commit_metadata.updated_at</code>.
	 */
	public void setUpdatedAt(Timestamp value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>public.commit_metadata.updated_at</code>.
	 */
	@Column(name = "updated_at", nullable = false)
	@NotNull
	public Timestamp getUpdatedAt() {
		return (Timestamp) getValue(6);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<UUID> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record7 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row7<UUID, UUID, UUID, String, String, Timestamp, Timestamp> fieldsRow() {
		return (Row7) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row7<UUID, UUID, UUID, String, String, Timestamp, Timestamp> valuesRow() {
		return (Row7) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field1() {
		return CommitMetadata.COMMIT_METADATA.UUID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field2() {
		return CommitMetadata.COMMIT_METADATA.COMMIT_UUID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field3() {
		return CommitMetadata.COMMIT_METADATA.REPO_DETAILS_UUID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return CommitMetadata.COMMIT_METADATA.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return CommitMetadata.COMMIT_METADATA.TEXT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field6() {
		return CommitMetadata.COMMIT_METADATA.CREATED_AT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field7() {
		return CommitMetadata.COMMIT_METADATA.UPDATED_AT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value1() {
		return getUuid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value2() {
		return getCommitUuid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value3() {
		return getRepoDetailsUuid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getText();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value6() {
		return getCreatedAt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value7() {
		return getUpdatedAt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommitMetadataRecord value1(UUID value) {
		setUuid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommitMetadataRecord value2(UUID value) {
		setCommitUuid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommitMetadataRecord value3(UUID value) {
		setRepoDetailsUuid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommitMetadataRecord value4(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommitMetadataRecord value5(String value) {
		setText(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommitMetadataRecord value6(Timestamp value) {
		setCreatedAt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommitMetadataRecord value7(Timestamp value) {
		setUpdatedAt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommitMetadataRecord values(UUID value1, UUID value2, UUID value3, String value4, String value5, Timestamp value6, Timestamp value7) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached CommitMetadataRecord
	 */
	public CommitMetadataRecord() {
		super(CommitMetadata.COMMIT_METADATA);
	}

	/**
	 * Create a detached, initialised CommitMetadataRecord
	 */
	public CommitMetadataRecord(UUID uuid, UUID commitUuid, UUID repoDetailsUuid, String name, String text, Timestamp createdAt, Timestamp updatedAt) {
		super(CommitMetadata.COMMIT_METADATA);

		setValue(0, uuid);
		setValue(1, commitUuid);
		setValue(2, repoDetailsUuid);
		setValue(3, name);
		setValue(4, text);
		setValue(5, createdAt);
		setValue(6, updatedAt);
	}
}
