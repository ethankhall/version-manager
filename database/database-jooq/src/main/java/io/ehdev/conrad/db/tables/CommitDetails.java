/**
 * This class is generated by jOOQ
 */
package io.ehdev.conrad.db.tables;


import io.ehdev.conrad.db.Keys;
import io.ehdev.conrad.db.Public;
import io.ehdev.conrad.db.tables.records.CommitDetailsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommitDetails extends TableImpl<CommitDetailsRecord> {

	private static final long serialVersionUID = 1075432713;

	/**
	 * The reference instance of <code>public.commit_details</code>
	 */
	public static final CommitDetails COMMIT_DETAILS = new CommitDetails();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CommitDetailsRecord> getRecordType() {
		return CommitDetailsRecord.class;
	}

	/**
	 * The column <code>public.commit_details.uuid</code>.
	 */
	public final TableField<CommitDetailsRecord, UUID> UUID = createField("uuid", org.jooq.impl.SQLDataType.UUID.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.commit_details.vcs_repo_uuid</code>.
	 */
	public final TableField<CommitDetailsRecord, UUID> VCS_REPO_UUID = createField("vcs_repo_uuid", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

	/**
	 * The column <code>public.commit_details.parent_commit_uuid</code>.
	 */
	public final TableField<CommitDetailsRecord, UUID> PARENT_COMMIT_UUID = createField("parent_commit_uuid", org.jooq.impl.SQLDataType.UUID, this, "");

	/**
	 * The column <code>public.commit_details.commit_id</code>.
	 */
	public final TableField<CommitDetailsRecord, String> COMMIT_ID = createField("commit_id", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false), this, "");

	/**
	 * The column <code>public.commit_details.version</code>.
	 */
	public final TableField<CommitDetailsRecord, String> VERSION = createField("version", org.jooq.impl.SQLDataType.VARCHAR.length(120).nullable(false), this, "");

	/**
	 * The column <code>public.commit_details.created_at</code>.
	 */
	public final TableField<CommitDetailsRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * Create a <code>public.commit_details</code> table reference
	 */
	public CommitDetails() {
		this("commit_details", null);
	}

	/**
	 * Create an aliased <code>public.commit_details</code> table reference
	 */
	public CommitDetails(String alias) {
		this(alias, COMMIT_DETAILS);
	}

	private CommitDetails(String alias, Table<CommitDetailsRecord> aliased) {
		this(alias, aliased, null);
	}

	private CommitDetails(String alias, Table<CommitDetailsRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CommitDetailsRecord> getPrimaryKey() {
		return Keys.COMMIT_DETAILS_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CommitDetailsRecord>> getKeys() {
		return Arrays.<UniqueKey<CommitDetailsRecord>>asList(Keys.COMMIT_DETAILS_PKEY, Keys.COMMIT_DETAILS_COMMIT_ID_VCS_REPO_UUID_KEY, Keys.COMMIT_DETAILS_VERSION_VCS_REPO_UUID_KEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<CommitDetailsRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<CommitDetailsRecord, ?>>asList(Keys.COMMIT_DETAILS__COMMIT_DETAILS_VCS_REPO_UUID_FKEY, Keys.COMMIT_DETAILS__COMMIT_DETAILS_PARENT_COMMIT_UUID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommitDetails as(String alias) {
		return new CommitDetails(alias, this);
	}

	/**
	 * Rename this table
	 */
	public CommitDetails rename(String name) {
		return new CommitDetails(name, null);
	}
}
