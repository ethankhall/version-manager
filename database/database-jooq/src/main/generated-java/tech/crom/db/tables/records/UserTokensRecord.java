/*
 * This file is generated by jOOQ.
 */
package tech.crom.db.tables.records;


import java.time.Instant;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import tech.crom.db.tables.UserTokensTable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "user_tokens", schema = "version_manager_test", indexes = {
    @Index(name = "PRIMARY", unique = true, columnList = "user_token_id ASC"),
    @Index(name = "public_user_token", unique = true, columnList = "public_user_token ASC"),
    @Index(name = "user_id", columnList = "user_id ASC")
})
public class UserTokensRecord extends UpdatableRecordImpl<UserTokensRecord> implements Record6<Long, String, Instant, Instant, Boolean, Long> {

    private static final long serialVersionUID = 1992106884;

    /**
     * Setter for <code>version_manager_test.user_tokens.user_token_id</code>.
     */
    public void setUserTokenId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>version_manager_test.user_tokens.user_token_id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "user_token_id", unique = true, nullable = false, precision = 19)
    public Long getUserTokenId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>version_manager_test.user_tokens.public_user_token</code>.
     */
    public void setPublicUserToken(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>version_manager_test.user_tokens.public_user_token</code>.
     */
    @Column(name = "public_user_token", unique = true, nullable = false, length = 64)
    @NotNull
    @Size(max = 64)
    public String getPublicUserToken() {
        return (String) get(1);
    }

    /**
     * Setter for <code>version_manager_test.user_tokens.created_at</code>.
     */
    public void setCreatedAt(Instant value) {
        set(2, value);
    }

    /**
     * Getter for <code>version_manager_test.user_tokens.created_at</code>.
     */
    @Column(name = "created_at", nullable = false)
    @NotNull
    public Instant getCreatedAt() {
        return (Instant) get(2);
    }

    /**
     * Setter for <code>version_manager_test.user_tokens.expires_at</code>.
     */
    public void setExpiresAt(Instant value) {
        set(3, value);
    }

    /**
     * Getter for <code>version_manager_test.user_tokens.expires_at</code>.
     */
    @Column(name = "expires_at", nullable = false)
    public Instant getExpiresAt() {
        return (Instant) get(3);
    }

    /**
     * Setter for <code>version_manager_test.user_tokens.valid</code>.
     */
    public void setValid(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>version_manager_test.user_tokens.valid</code>.
     */
    @Column(name = "valid")
    public Boolean getValid() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>version_manager_test.user_tokens.user_id</code>.
     */
    public void setUserId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>version_manager_test.user_tokens.user_id</code>.
     */
    @Column(name = "user_id", nullable = false, precision = 19)
    @NotNull
    public Long getUserId() {
        return (Long) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, Instant, Instant, Boolean, Long> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, Instant, Instant, Boolean, Long> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return UserTokensTable.USER_TOKENS.USER_TOKEN_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return UserTokensTable.USER_TOKENS.PUBLIC_USER_TOKEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Instant> field3() {
        return UserTokensTable.USER_TOKENS.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Instant> field4() {
        return UserTokensTable.USER_TOKENS.EXPIRES_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field5() {
        return UserTokensTable.USER_TOKENS.VALID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field6() {
        return UserTokensTable.USER_TOKENS.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getUserTokenId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getPublicUserToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Instant component3() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Instant component4() {
        return getExpiresAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component5() {
        return getValid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component6() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getUserTokenId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getPublicUserToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Instant value3() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Instant value4() {
        return getExpiresAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value5() {
        return getValid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value6() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserTokensRecord value1(Long value) {
        setUserTokenId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserTokensRecord value2(String value) {
        setPublicUserToken(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserTokensRecord value3(Instant value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserTokensRecord value4(Instant value) {
        setExpiresAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserTokensRecord value5(Boolean value) {
        setValid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserTokensRecord value6(Long value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserTokensRecord values(Long value1, String value2, Instant value3, Instant value4, Boolean value5, Long value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserTokensRecord
     */
    public UserTokensRecord() {
        super(UserTokensTable.USER_TOKENS);
    }

    /**
     * Create a detached, initialised UserTokensRecord
     */
    public UserTokensRecord(Long userTokenId, String publicUserToken, Instant createdAt, Instant expiresAt, Boolean valid, Long userId) {
        super(UserTokensTable.USER_TOKENS);

        set(0, userTokenId);
        set(1, publicUserToken);
        set(2, createdAt);
        set(3, expiresAt);
        set(4, valid);
        set(5, userId);
    }
}
