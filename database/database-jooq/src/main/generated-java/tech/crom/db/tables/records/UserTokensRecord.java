/**
 * This class is generated by jOOQ
 */
package tech.crom.db.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import tech.crom.db.tables.UserTokensTable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "user_tokens", schema = "version_manager_test")
public class UserTokensRecord extends UpdatableRecordImpl<UserTokensRecord> implements Record5<Long, Timestamp, Timestamp, Byte, Long> {

    private static final long serialVersionUID = -851114465;

    /**
     * Setter for <code>version_manager_test.user_tokens.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>version_manager_test.user_tokens.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 19)
    @NotNull
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>version_manager_test.user_tokens.created_at</code>.
     */
    public void setCreatedAt(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>version_manager_test.user_tokens.created_at</code>.
     */
    @Column(name = "created_at", nullable = false)
    public Timestamp getCreatedAt() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>version_manager_test.user_tokens.expires_at</code>.
     */
    public void setExpiresAt(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>version_manager_test.user_tokens.expires_at</code>.
     */
    @Column(name = "expires_at", nullable = false)
    public Timestamp getExpiresAt() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>version_manager_test.user_tokens.valid</code>.
     */
    public void setValid(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>version_manager_test.user_tokens.valid</code>.
     */
    @Column(name = "valid", precision = 3)
    public Byte getValid() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>version_manager_test.user_tokens.user_id</code>.
     */
    public void setUserId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>version_manager_test.user_tokens.user_id</code>.
     */
    @Column(name = "user_id", nullable = false, precision = 19)
    @NotNull
    public Long getUserId() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, Timestamp, Timestamp, Byte, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, Timestamp, Timestamp, Byte, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return UserTokensTable.USER_TOKENS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return UserTokensTable.USER_TOKENS.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return UserTokensTable.USER_TOKENS.EXPIRES_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field4() {
        return UserTokensTable.USER_TOKENS.VALID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field5() {
        return UserTokensTable.USER_TOKENS.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getExpiresAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value4() {
        return getValid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value5() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserTokensRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserTokensRecord value2(Timestamp value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserTokensRecord value3(Timestamp value) {
        setExpiresAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserTokensRecord value4(Byte value) {
        setValid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserTokensRecord value5(Long value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserTokensRecord values(Long value1, Timestamp value2, Timestamp value3, Byte value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserTokensRecord
     */
    public UserTokensRecord() {
        super(UserTokensTable.USER_TOKENS);
    }

    /**
     * Create a detached, initialised UserTokensRecord
     */
    public UserTokensRecord(Long id, Timestamp createdAt, Timestamp expiresAt, Byte valid, Long userId) {
        super(UserTokensTable.USER_TOKENS);

        set(0, id);
        set(1, createdAt);
        set(2, expiresAt);
        set(3, valid);
        set(4, userId);
    }
}
