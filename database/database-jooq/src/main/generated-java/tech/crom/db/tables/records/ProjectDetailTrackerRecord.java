/*
 * This file is generated by jOOQ.
 */
package tech.crom.db.tables.records;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import tech.crom.db.tables.ProjectDetailTrackerTable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "project_detail_tracker", schema = "version_manager_test", indexes = {
    @Index(name = "PRIMARY", unique = true, columnList = "project_detail_tracker_id ASC"),
    @Index(name = "product_detail_id", columnList = "product_detail_id ASC"),
    @Index(name = "user_id", columnList = "user_id ASC")
})
public class ProjectDetailTrackerRecord extends UpdatableRecordImpl<ProjectDetailTrackerRecord> implements Record3<Long, Long, Long> {

    private static final long serialVersionUID = 2089954116;

    /**
     * Setter for <code>version_manager_test.project_detail_tracker.project_detail_tracker_id</code>.
     */
    public void setProjectDetailTrackerId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>version_manager_test.project_detail_tracker.project_detail_tracker_id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "project_detail_tracker_id", unique = true, nullable = false, precision = 19)
    public Long getProjectDetailTrackerId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>version_manager_test.project_detail_tracker.product_detail_id</code>.
     */
    public void setProductDetailId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>version_manager_test.project_detail_tracker.product_detail_id</code>.
     */
    @Column(name = "product_detail_id", nullable = false, precision = 19)
    @NotNull
    public Long getProductDetailId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>version_manager_test.project_detail_tracker.user_id</code>.
     */
    public void setUserId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>version_manager_test.project_detail_tracker.user_id</code>.
     */
    @Column(name = "user_id", nullable = false, precision = 19)
    @NotNull
    public Long getUserId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, Long, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return ProjectDetailTrackerTable.PROJECT_DETAIL_TRACKER.PROJECT_DETAIL_TRACKER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return ProjectDetailTrackerTable.PROJECT_DETAIL_TRACKER.PRODUCT_DETAIL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return ProjectDetailTrackerTable.PROJECT_DETAIL_TRACKER.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getProjectDetailTrackerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getProductDetailId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getProjectDetailTrackerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getProductDetailId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectDetailTrackerRecord value1(Long value) {
        setProjectDetailTrackerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectDetailTrackerRecord value2(Long value) {
        setProductDetailId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectDetailTrackerRecord value3(Long value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectDetailTrackerRecord values(Long value1, Long value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProjectDetailTrackerRecord
     */
    public ProjectDetailTrackerRecord() {
        super(ProjectDetailTrackerTable.PROJECT_DETAIL_TRACKER);
    }

    /**
     * Create a detached, initialised ProjectDetailTrackerRecord
     */
    public ProjectDetailTrackerRecord(Long projectDetailTrackerId, Long productDetailId, Long userId) {
        super(ProjectDetailTrackerTable.PROJECT_DETAIL_TRACKER);

        set(0, projectDetailTrackerId);
        set(1, productDetailId);
        set(2, userId);
    }
}
