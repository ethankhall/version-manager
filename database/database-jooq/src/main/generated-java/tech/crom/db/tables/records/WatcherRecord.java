/**
 * This class is generated by jOOQ
 */
package tech.crom.db.tables.records;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import tech.crom.db.tables.WatcherTable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "watcher", schema = "version_manager_test")
public class WatcherRecord extends UpdatableRecordImpl<WatcherRecord> implements Record4<Long, Long, Long, Long> {

    private static final long serialVersionUID = -1623859700;

    /**
     * Setter for <code>version_manager_test.watcher.watcher_id</code>.
     */
    public void setWatcherId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>version_manager_test.watcher.watcher_id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "watcher_id", unique = true, nullable = false, precision = 19)
    @NotNull
    public Long getWatcherId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>version_manager_test.watcher.user_id</code>.
     */
    public void setUserId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>version_manager_test.watcher.user_id</code>.
     */
    @Column(name = "user_id", nullable = false, precision = 19)
    @NotNull
    public Long getUserId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>version_manager_test.watcher.project_details_id</code>.
     */
    public void setProjectDetailsId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>version_manager_test.watcher.project_details_id</code>.
     */
    @Column(name = "project_details_id", precision = 19)
    public Long getProjectDetailsId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>version_manager_test.watcher.repo_details_id</code>.
     */
    public void setRepoDetailsId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>version_manager_test.watcher.repo_details_id</code>.
     */
    @Column(name = "repo_details_id", precision = 19)
    public Long getRepoDetailsId() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Long, Long, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Long, Long, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return WatcherTable.WATCHER.WATCHER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return WatcherTable.WATCHER.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return WatcherTable.WATCHER.PROJECT_DETAILS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return WatcherTable.WATCHER.REPO_DETAILS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getWatcherId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getProjectDetailsId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getRepoDetailsId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WatcherRecord value1(Long value) {
        setWatcherId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WatcherRecord value2(Long value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WatcherRecord value3(Long value) {
        setProjectDetailsId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WatcherRecord value4(Long value) {
        setRepoDetailsId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WatcherRecord values(Long value1, Long value2, Long value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WatcherRecord
     */
    public WatcherRecord() {
        super(WatcherTable.WATCHER);
    }

    /**
     * Create a detached, initialised WatcherRecord
     */
    public WatcherRecord(Long watcherId, Long userId, Long projectDetailsId, Long repoDetailsId) {
        super(WatcherTable.WATCHER);

        set(0, watcherId);
        set(1, userId);
        set(2, projectDetailsId);
        set(3, repoDetailsId);
    }
}
