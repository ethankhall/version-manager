/*
 * This file is generated by jOOQ.
 */
package tech.crom.db;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import tech.crom.db.tables.CommitDetailsTable;
import tech.crom.db.tables.CommitMetadataTable;
import tech.crom.db.tables.FlywaySchemaHistoryTable;
import tech.crom.db.tables.ProjectDetailTrackerTable;
import tech.crom.db.tables.ProjectDetailsTable;
import tech.crom.db.tables.RepoDetailsTable;
import tech.crom.db.tables.RepositoryTokensTable;
import tech.crom.db.tables.SecurityIdSeqTable;
import tech.crom.db.tables.UserDetailsTable;
import tech.crom.db.tables.UserTokensTable;
import tech.crom.db.tables.VersionBumpersTable;
import tech.crom.db.tables.VersionStateMachineConnectionsTable;
import tech.crom.db.tables.VersionStateMachineDefinitionsTable;
import tech.crom.db.tables.VersionStateMachineStatesTable;
import tech.crom.db.tables.WatcherTable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VersionManagerTest extends SchemaImpl {

    private static final long serialVersionUID = -1968416505;

    /**
     * The reference instance of <code>version_manager_test</code>
     */
    public static final VersionManagerTest VERSION_MANAGER_TEST = new VersionManagerTest();

    /**
     * The table <code>version_manager_test.commit_details</code>.
     */
    public final CommitDetailsTable COMMIT_DETAILS = tech.crom.db.tables.CommitDetailsTable.COMMIT_DETAILS;

    /**
     * The table <code>version_manager_test.commit_metadata</code>.
     */
    public final CommitMetadataTable COMMIT_METADATA = tech.crom.db.tables.CommitMetadataTable.COMMIT_METADATA;

    /**
     * The table <code>version_manager_test.flyway_schema_history</code>.
     */
    public final FlywaySchemaHistoryTable FLYWAY_SCHEMA_HISTORY = tech.crom.db.tables.FlywaySchemaHistoryTable.FLYWAY_SCHEMA_HISTORY;

    /**
     * The table <code>version_manager_test.project_detail_tracker</code>.
     */
    public final ProjectDetailTrackerTable PROJECT_DETAIL_TRACKER = tech.crom.db.tables.ProjectDetailTrackerTable.PROJECT_DETAIL_TRACKER;

    /**
     * The table <code>version_manager_test.project_details</code>.
     */
    public final ProjectDetailsTable PROJECT_DETAILS = tech.crom.db.tables.ProjectDetailsTable.PROJECT_DETAILS;

    /**
     * The table <code>version_manager_test.repo_details</code>.
     */
    public final RepoDetailsTable REPO_DETAILS = tech.crom.db.tables.RepoDetailsTable.REPO_DETAILS;

    /**
     * The table <code>version_manager_test.repository_tokens</code>.
     */
    public final RepositoryTokensTable REPOSITORY_TOKENS = tech.crom.db.tables.RepositoryTokensTable.REPOSITORY_TOKENS;

    /**
     * The table <code>version_manager_test.security_id_seq</code>.
     */
    public final SecurityIdSeqTable SECURITY_ID_SEQ = tech.crom.db.tables.SecurityIdSeqTable.SECURITY_ID_SEQ;

    /**
     * The table <code>version_manager_test.user_details</code>.
     */
    public final UserDetailsTable USER_DETAILS = tech.crom.db.tables.UserDetailsTable.USER_DETAILS;

    /**
     * The table <code>version_manager_test.user_tokens</code>.
     */
    public final UserTokensTable USER_TOKENS = tech.crom.db.tables.UserTokensTable.USER_TOKENS;

    /**
     * The table <code>version_manager_test.version_bumpers</code>.
     */
    public final VersionBumpersTable VERSION_BUMPERS = tech.crom.db.tables.VersionBumpersTable.VERSION_BUMPERS;

    /**
     * The table <code>version_manager_test.version_state_machine_connections</code>.
     */
    public final VersionStateMachineConnectionsTable VERSION_STATE_MACHINE_CONNECTIONS = tech.crom.db.tables.VersionStateMachineConnectionsTable.VERSION_STATE_MACHINE_CONNECTIONS;

    /**
     * The table <code>version_manager_test.version_state_machine_definitions</code>.
     */
    public final VersionStateMachineDefinitionsTable VERSION_STATE_MACHINE_DEFINITIONS = tech.crom.db.tables.VersionStateMachineDefinitionsTable.VERSION_STATE_MACHINE_DEFINITIONS;

    /**
     * The table <code>version_manager_test.version_state_machine_states</code>.
     */
    public final VersionStateMachineStatesTable VERSION_STATE_MACHINE_STATES = tech.crom.db.tables.VersionStateMachineStatesTable.VERSION_STATE_MACHINE_STATES;

    /**
     * The table <code>version_manager_test.watcher</code>.
     */
    public final WatcherTable WATCHER = tech.crom.db.tables.WatcherTable.WATCHER;

    /**
     * No further instances allowed
     */
    private VersionManagerTest() {
        super("version_manager_test", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            CommitDetailsTable.COMMIT_DETAILS,
            CommitMetadataTable.COMMIT_METADATA,
            FlywaySchemaHistoryTable.FLYWAY_SCHEMA_HISTORY,
            ProjectDetailTrackerTable.PROJECT_DETAIL_TRACKER,
            ProjectDetailsTable.PROJECT_DETAILS,
            RepoDetailsTable.REPO_DETAILS,
            RepositoryTokensTable.REPOSITORY_TOKENS,
            SecurityIdSeqTable.SECURITY_ID_SEQ,
            UserDetailsTable.USER_DETAILS,
            UserTokensTable.USER_TOKENS,
            VersionBumpersTable.VERSION_BUMPERS,
            VersionStateMachineConnectionsTable.VERSION_STATE_MACHINE_CONNECTIONS,
            VersionStateMachineDefinitionsTable.VERSION_STATE_MACHINE_DEFINITIONS,
            VersionStateMachineStatesTable.VERSION_STATE_MACHINE_STATES,
            WatcherTable.WATCHER);
    }
}
