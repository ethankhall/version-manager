/**
 * This class is generated by jOOQ
 */
package tech.crom.db.tables.records;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;

import tech.crom.db.tables.AclEntryTable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "acl_entry", schema = "version_manager_test", uniqueConstraints = {
    @UniqueConstraint(columnNames = {"acl_object_identity", "ace_order"})
})
public class AclEntryRecord extends UpdatableRecordImpl<AclEntryRecord> implements Record8<ULong, ULong, Integer, ULong, UInteger, Byte, Byte, Byte> {

    private static final long serialVersionUID = -2093942153;

    /**
     * Setter for <code>version_manager_test.acl_entry.id</code>.
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>version_manager_test.acl_entry.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 20)
    @NotNull
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>version_manager_test.acl_entry.acl_object_identity</code>.
     */
    public void setAclObjectIdentity(ULong value) {
        set(1, value);
    }

    /**
     * Getter for <code>version_manager_test.acl_entry.acl_object_identity</code>.
     */
    @Column(name = "acl_object_identity", nullable = false, precision = 20)
    @NotNull
    public ULong getAclObjectIdentity() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>version_manager_test.acl_entry.ace_order</code>.
     */
    public void setAceOrder(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>version_manager_test.acl_entry.ace_order</code>.
     */
    @Column(name = "ace_order", nullable = false, precision = 10)
    @NotNull
    public Integer getAceOrder() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>version_manager_test.acl_entry.sid</code>.
     */
    public void setSid(ULong value) {
        set(3, value);
    }

    /**
     * Getter for <code>version_manager_test.acl_entry.sid</code>.
     */
    @Column(name = "sid", nullable = false, precision = 20)
    @NotNull
    public ULong getSid() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>version_manager_test.acl_entry.mask</code>.
     */
    public void setMask(UInteger value) {
        set(4, value);
    }

    /**
     * Getter for <code>version_manager_test.acl_entry.mask</code>.
     */
    @Column(name = "mask", nullable = false, precision = 10)
    @NotNull
    public UInteger getMask() {
        return (UInteger) get(4);
    }

    /**
     * Setter for <code>version_manager_test.acl_entry.granting</code>.
     */
    public void setGranting(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>version_manager_test.acl_entry.granting</code>.
     */
    @Column(name = "granting", nullable = false, precision = 3)
    @NotNull
    public Byte getGranting() {
        return (Byte) get(5);
    }

    /**
     * Setter for <code>version_manager_test.acl_entry.audit_success</code>.
     */
    public void setAuditSuccess(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>version_manager_test.acl_entry.audit_success</code>.
     */
    @Column(name = "audit_success", nullable = false, precision = 3)
    @NotNull
    public Byte getAuditSuccess() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>version_manager_test.acl_entry.audit_failure</code>.
     */
    public void setAuditFailure(Byte value) {
        set(7, value);
    }

    /**
     * Getter for <code>version_manager_test.acl_entry.audit_failure</code>.
     */
    @Column(name = "audit_failure", nullable = false, precision = 3)
    @NotNull
    public Byte getAuditFailure() {
        return (Byte) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<ULong, ULong, Integer, ULong, UInteger, Byte, Byte, Byte> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<ULong, ULong, Integer, ULong, UInteger, Byte, Byte, Byte> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field1() {
        return AclEntryTable.ACL_ENTRY.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field2() {
        return AclEntryTable.ACL_ENTRY.ACL_OBJECT_IDENTITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return AclEntryTable.ACL_ENTRY.ACE_ORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field4() {
        return AclEntryTable.ACL_ENTRY.SID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field5() {
        return AclEntryTable.ACL_ENTRY.MASK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field6() {
        return AclEntryTable.ACL_ENTRY.GRANTING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field7() {
        return AclEntryTable.ACL_ENTRY.AUDIT_SUCCESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field8() {
        return AclEntryTable.ACL_ENTRY.AUDIT_FAILURE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value2() {
        return getAclObjectIdentity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getAceOrder();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value4() {
        return getSid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value5() {
        return getMask();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value6() {
        return getGranting();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value7() {
        return getAuditSuccess();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value8() {
        return getAuditFailure();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AclEntryRecord value1(ULong value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AclEntryRecord value2(ULong value) {
        setAclObjectIdentity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AclEntryRecord value3(Integer value) {
        setAceOrder(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AclEntryRecord value4(ULong value) {
        setSid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AclEntryRecord value5(UInteger value) {
        setMask(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AclEntryRecord value6(Byte value) {
        setGranting(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AclEntryRecord value7(Byte value) {
        setAuditSuccess(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AclEntryRecord value8(Byte value) {
        setAuditFailure(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AclEntryRecord values(ULong value1, ULong value2, Integer value3, ULong value4, UInteger value5, Byte value6, Byte value7, Byte value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AclEntryRecord
     */
    public AclEntryRecord() {
        super(AclEntryTable.ACL_ENTRY);
    }

    /**
     * Create a detached, initialised AclEntryRecord
     */
    public AclEntryRecord(ULong id, ULong aclObjectIdentity, Integer aceOrder, ULong sid, UInteger mask, Byte granting, Byte auditSuccess, Byte auditFailure) {
        super(AclEntryTable.ACL_ENTRY);

        set(0, id);
        set(1, aclObjectIdentity);
        set(2, aceOrder);
        set(3, sid);
        set(4, mask);
        set(5, granting);
        set(6, auditSuccess);
        set(7, auditFailure);
    }
}
