/**
 * This class is generated by jOOQ
 */
package tech.crom.db.tables.records;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;

import tech.crom.db.tables.AclObjectIdentityTable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "acl_object_identity", schema = "version_manager_test", uniqueConstraints = {
    @UniqueConstraint(columnNames = {"object_id_class", "object_id_identity"})
})
public class AclObjectIdentityRecord extends UpdatableRecordImpl<AclObjectIdentityRecord> implements Record6<ULong, ULong, Long, ULong, ULong, Byte> {

    private static final long serialVersionUID = -144092190;

    /**
     * Setter for <code>version_manager_test.acl_object_identity.id</code>.
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>version_manager_test.acl_object_identity.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 20)
    @NotNull
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>version_manager_test.acl_object_identity.object_id_class</code>.
     */
    public void setObjectIdClass(ULong value) {
        set(1, value);
    }

    /**
     * Getter for <code>version_manager_test.acl_object_identity.object_id_class</code>.
     */
    @Column(name = "object_id_class", nullable = false, precision = 20)
    @NotNull
    public ULong getObjectIdClass() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>version_manager_test.acl_object_identity.object_id_identity</code>.
     */
    public void setObjectIdIdentity(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>version_manager_test.acl_object_identity.object_id_identity</code>.
     */
    @Column(name = "object_id_identity", nullable = false, precision = 19)
    @NotNull
    public Long getObjectIdIdentity() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>version_manager_test.acl_object_identity.parent_object</code>.
     */
    public void setParentObject(ULong value) {
        set(3, value);
    }

    /**
     * Getter for <code>version_manager_test.acl_object_identity.parent_object</code>.
     */
    @Column(name = "parent_object", precision = 20)
    public ULong getParentObject() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>version_manager_test.acl_object_identity.owner_sid</code>.
     */
    public void setOwnerSid(ULong value) {
        set(4, value);
    }

    /**
     * Getter for <code>version_manager_test.acl_object_identity.owner_sid</code>.
     */
    @Column(name = "owner_sid", precision = 20)
    public ULong getOwnerSid() {
        return (ULong) get(4);
    }

    /**
     * Setter for <code>version_manager_test.acl_object_identity.entries_inheriting</code>.
     */
    public void setEntriesInheriting(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>version_manager_test.acl_object_identity.entries_inheriting</code>.
     */
    @Column(name = "entries_inheriting", nullable = false, precision = 3)
    @NotNull
    public Byte getEntriesInheriting() {
        return (Byte) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<ULong, ULong, Long, ULong, ULong, Byte> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<ULong, ULong, Long, ULong, ULong, Byte> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field1() {
        return AclObjectIdentityTable.ACL_OBJECT_IDENTITY.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field2() {
        return AclObjectIdentityTable.ACL_OBJECT_IDENTITY.OBJECT_ID_CLASS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return AclObjectIdentityTable.ACL_OBJECT_IDENTITY.OBJECT_ID_IDENTITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field4() {
        return AclObjectIdentityTable.ACL_OBJECT_IDENTITY.PARENT_OBJECT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field5() {
        return AclObjectIdentityTable.ACL_OBJECT_IDENTITY.OWNER_SID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field6() {
        return AclObjectIdentityTable.ACL_OBJECT_IDENTITY.ENTRIES_INHERITING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value2() {
        return getObjectIdClass();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getObjectIdIdentity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value4() {
        return getParentObject();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value5() {
        return getOwnerSid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value6() {
        return getEntriesInheriting();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AclObjectIdentityRecord value1(ULong value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AclObjectIdentityRecord value2(ULong value) {
        setObjectIdClass(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AclObjectIdentityRecord value3(Long value) {
        setObjectIdIdentity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AclObjectIdentityRecord value4(ULong value) {
        setParentObject(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AclObjectIdentityRecord value5(ULong value) {
        setOwnerSid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AclObjectIdentityRecord value6(Byte value) {
        setEntriesInheriting(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AclObjectIdentityRecord values(ULong value1, ULong value2, Long value3, ULong value4, ULong value5, Byte value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AclObjectIdentityRecord
     */
    public AclObjectIdentityRecord() {
        super(AclObjectIdentityTable.ACL_OBJECT_IDENTITY);
    }

    /**
     * Create a detached, initialised AclObjectIdentityRecord
     */
    public AclObjectIdentityRecord(ULong id, ULong objectIdClass, Long objectIdIdentity, ULong parentObject, ULong ownerSid, Byte entriesInheriting) {
        super(AclObjectIdentityTable.ACL_OBJECT_IDENTITY);

        set(0, id);
        set(1, objectIdClass);
        set(2, objectIdIdentity);
        set(3, parentObject);
        set(4, ownerSid);
        set(5, entriesInheriting);
    }
}
