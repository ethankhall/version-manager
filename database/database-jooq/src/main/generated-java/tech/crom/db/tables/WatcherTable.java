/**
 * This class is generated by jOOQ
 */
package tech.crom.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import tech.crom.db.Keys;
import tech.crom.db.VersionManagerTest;
import tech.crom.db.tables.records.WatcherRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WatcherTable extends TableImpl<WatcherRecord> {

    private static final long serialVersionUID = 273442428;

    /**
     * The reference instance of <code>version_manager_test.watcher</code>
     */
    public static final WatcherTable WATCHER = new WatcherTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WatcherRecord> getRecordType() {
        return WatcherRecord.class;
    }

    /**
     * The column <code>version_manager_test.watcher.watcher_id</code>.
     */
    public final TableField<WatcherRecord, Long> WATCHER_ID = createField("watcher_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>version_manager_test.watcher.user_id</code>.
     */
    public final TableField<WatcherRecord, Long> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>version_manager_test.watcher.project_details_id</code>.
     */
    public final TableField<WatcherRecord, Long> PROJECT_DETAILS_ID = createField("project_details_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>version_manager_test.watcher.repo_details_id</code>.
     */
    public final TableField<WatcherRecord, Long> REPO_DETAILS_ID = createField("repo_details_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>version_manager_test.watcher</code> table reference
     */
    public WatcherTable() {
        this("watcher", null);
    }

    /**
     * Create an aliased <code>version_manager_test.watcher</code> table reference
     */
    public WatcherTable(String alias) {
        this(alias, WATCHER);
    }

    private WatcherTable(String alias, Table<WatcherRecord> aliased) {
        this(alias, aliased, null);
    }

    private WatcherTable(String alias, Table<WatcherRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return VersionManagerTest.VERSION_MANAGER_TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<WatcherRecord, Long> getIdentity() {
        return Keys.IDENTITY_WATCHER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WatcherRecord> getPrimaryKey() {
        return Keys.KEY_WATCHER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WatcherRecord>> getKeys() {
        return Arrays.<UniqueKey<WatcherRecord>>asList(Keys.KEY_WATCHER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<WatcherRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<WatcherRecord, ?>>asList(Keys.WATCHER_IBFK_1, Keys.WATCHER_IBFK_2, Keys.WATCHER_IBFK_3);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WatcherTable as(String alias) {
        return new WatcherTable(alias, this);
    }

    /**
     * Rename this table
     */
    public WatcherTable rename(String name) {
        return new WatcherTable(name, null);
    }
}
