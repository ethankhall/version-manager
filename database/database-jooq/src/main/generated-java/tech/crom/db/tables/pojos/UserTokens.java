/*
 * This file is generated by jOOQ.
*/
package tech.crom.db.tables.pojos;


import java.io.Serializable;
import java.time.Instant;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "user_tokens", schema = "version_manager_test")
public class UserTokens implements Serializable {

    private static final long serialVersionUID = 1950704383;

    private Long    userTokenId;
    private String  publicUserToken;
    private Instant createdAt;
    private Instant expiresAt;
    private Boolean valid;
    private Long    userId;

    public UserTokens() {}

    public UserTokens(UserTokens value) {
        this.userTokenId = value.userTokenId;
        this.publicUserToken = value.publicUserToken;
        this.createdAt = value.createdAt;
        this.expiresAt = value.expiresAt;
        this.valid = value.valid;
        this.userId = value.userId;
    }

    public UserTokens(
        Long    userTokenId,
        String  publicUserToken,
        Instant createdAt,
        Instant expiresAt,
        Boolean valid,
        Long    userId
    ) {
        this.userTokenId = userTokenId;
        this.publicUserToken = publicUserToken;
        this.createdAt = createdAt;
        this.expiresAt = expiresAt;
        this.valid = valid;
        this.userId = userId;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "user_token_id", unique = true, nullable = false, precision = 19)
    @NotNull
    public Long getUserTokenId() {
        return this.userTokenId;
    }

    public void setUserTokenId(Long userTokenId) {
        this.userTokenId = userTokenId;
    }

    @Column(name = "public_user_token", unique = true, nullable = false, length = 64)
    @NotNull
    @Size(max = 64)
    public String getPublicUserToken() {
        return this.publicUserToken;
    }

    public void setPublicUserToken(String publicUserToken) {
        this.publicUserToken = publicUserToken;
    }

    @Column(name = "created_at", nullable = false)
    public Instant getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Instant createdAt) {
        this.createdAt = createdAt;
    }

    @Column(name = "expires_at", nullable = false)
    public Instant getExpiresAt() {
        return this.expiresAt;
    }

    public void setExpiresAt(Instant expiresAt) {
        this.expiresAt = expiresAt;
    }

    @Column(name = "valid")
    public Boolean getValid() {
        return this.valid;
    }

    public void setValid(Boolean valid) {
        this.valid = valid;
    }

    @Column(name = "user_id", nullable = false, precision = 19)
    @NotNull
    public Long getUserId() {
        return this.userId;
    }

    public void setUserId(Long userId) {
        this.userId = userId;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("UserTokens (");

        sb.append(userTokenId);
        sb.append(", ").append(publicUserToken);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(expiresAt);
        sb.append(", ").append(valid);
        sb.append(", ").append(userId);

        sb.append(")");
        return sb.toString();
    }
}
