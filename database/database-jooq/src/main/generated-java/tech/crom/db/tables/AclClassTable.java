/*
 * This file is generated by jOOQ.
*/
package tech.crom.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import tech.crom.db.Keys;
import tech.crom.db.VersionManagerTest;
import tech.crom.db.tables.records.AclClassRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AclClassTable extends TableImpl<AclClassRecord> {

    private static final long serialVersionUID = 18183416;

    /**
     * The reference instance of <code>version_manager_test.acl_class</code>
     */
    public static final AclClassTable ACL_CLASS = new AclClassTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AclClassRecord> getRecordType() {
        return AclClassRecord.class;
    }

    /**
     * The column <code>version_manager_test.acl_class.id</code>.
     */
    public final TableField<AclClassRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>version_manager_test.acl_class.class</code>.
     */
    public final TableField<AclClassRecord, String> CLASS = createField("class", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * Create a <code>version_manager_test.acl_class</code> table reference
     */
    public AclClassTable() {
        this("acl_class", null);
    }

    /**
     * Create an aliased <code>version_manager_test.acl_class</code> table reference
     */
    public AclClassTable(String alias) {
        this(alias, ACL_CLASS);
    }

    private AclClassTable(String alias, Table<AclClassRecord> aliased) {
        this(alias, aliased, null);
    }

    private AclClassTable(String alias, Table<AclClassRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return VersionManagerTest.VERSION_MANAGER_TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AclClassRecord, ULong> getIdentity() {
        return Keys.IDENTITY_ACL_CLASS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AclClassRecord> getPrimaryKey() {
        return Keys.KEY_ACL_CLASS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AclClassRecord>> getKeys() {
        return Arrays.<UniqueKey<AclClassRecord>>asList(Keys.KEY_ACL_CLASS_PRIMARY, Keys.KEY_ACL_CLASS_UK_ACL_CLASS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AclClassTable as(String alias) {
        return new AclClassTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AclClassTable rename(String name) {
        return new AclClassTable(name, null);
    }
}
