/**
 * This class is generated by jOOQ
 */
package io.ehdev.conrad.db.tables.records;


import io.ehdev.conrad.db.tables.WatcherTable;

import java.util.UUID;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "watcher", schema = "public")
public class WatcherRecord extends UpdatableRecordImpl<WatcherRecord> implements Record4<UUID, UUID, UUID, UUID> {

    private static final long serialVersionUID = 1306628699;

    /**
     * Setter for <code>public.watcher.uuid</code>.
     */
    public void setUuid(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.watcher.uuid</code>.
     */
    @Id
    @Column(name = "uuid", unique = true, nullable = false)
    public UUID getUuid() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.watcher.user_uuid</code>.
     */
    public void setUserUuid(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.watcher.user_uuid</code>.
     */
    @Column(name = "user_uuid", nullable = false)
    @NotNull
    public UUID getUserUuid() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.watcher.project_details_uuid</code>.
     */
    public void setProjectDetailsUuid(UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.watcher.project_details_uuid</code>.
     */
    @Column(name = "project_details_uuid")
    public UUID getProjectDetailsUuid() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.watcher.repo_details_uuid</code>.
     */
    public void setRepoDetailsUuid(UUID value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.watcher.repo_details_uuid</code>.
     */
    @Column(name = "repo_details_uuid")
    public UUID getRepoDetailsUuid() {
        return (UUID) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<UUID, UUID, UUID, UUID> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<UUID, UUID, UUID, UUID> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field1() {
        return WatcherTable.WATCHER.UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field2() {
        return WatcherTable.WATCHER.USER_UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field3() {
        return WatcherTable.WATCHER.PROJECT_DETAILS_UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field4() {
        return WatcherTable.WATCHER.REPO_DETAILS_UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value1() {
        return getUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value2() {
        return getUserUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value3() {
        return getProjectDetailsUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value4() {
        return getRepoDetailsUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WatcherRecord value1(UUID value) {
        setUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WatcherRecord value2(UUID value) {
        setUserUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WatcherRecord value3(UUID value) {
        setProjectDetailsUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WatcherRecord value4(UUID value) {
        setRepoDetailsUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WatcherRecord values(UUID value1, UUID value2, UUID value3, UUID value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WatcherRecord
     */
    public WatcherRecord() {
        super(WatcherTable.WATCHER);
    }

    /**
     * Create a detached, initialised WatcherRecord
     */
    public WatcherRecord(UUID uuid, UUID userUuid, UUID projectDetailsUuid, UUID repoDetailsUuid) {
        super(WatcherTable.WATCHER);

        set(0, uuid);
        set(1, userUuid);
        set(2, projectDetailsUuid);
        set(3, repoDetailsUuid);
    }
}
