/**
 * This class is generated by jOOQ
 */
package io.ehdev.conrad.db.tables.records;


import io.ehdev.conrad.db.enums.TokenType;
import io.ehdev.conrad.db.tables.UserTokensTable;

import java.time.Instant;
import java.util.UUID;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "user_tokens", schema = "public")
public class UserTokensRecord extends UpdatableRecordImpl<UserTokensRecord> implements Record6<UUID, UUID, Instant, Instant, Boolean, TokenType> {

	private static final long serialVersionUID = 1980285280;

	/**
	 * Setter for <code>public.user_tokens.uuid</code>.
	 */
	public void setUuid(UUID value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.user_tokens.uuid</code>.
	 */
	@Id
	@Column(name = "uuid", unique = true, nullable = false)
	@NotNull
	public UUID getUuid() {
		return (UUID) getValue(0);
	}

	/**
	 * Setter for <code>public.user_tokens.user_uuid</code>.
	 */
	public void setUserUuid(UUID value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.user_tokens.user_uuid</code>.
	 */
	@Column(name = "user_uuid", nullable = false)
	@NotNull
	public UUID getUserUuid() {
		return (UUID) getValue(1);
	}

	/**
	 * Setter for <code>public.user_tokens.created_at</code>.
	 */
	public void setCreatedAt(Instant value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.user_tokens.created_at</code>.
	 */
	@Column(name = "created_at", nullable = false)
	@NotNull
	public Instant getCreatedAt() {
		return (Instant) getValue(2);
	}

	/**
	 * Setter for <code>public.user_tokens.expires_at</code>.
	 */
	public void setExpiresAt(Instant value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.user_tokens.expires_at</code>.
	 */
	@Column(name = "expires_at")
	public Instant getExpiresAt() {
		return (Instant) getValue(3);
	}

	/**
	 * Setter for <code>public.user_tokens.valid</code>.
	 */
	public void setValid(Boolean value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>public.user_tokens.valid</code>.
	 */
	@Column(name = "valid")
	public Boolean getValid() {
		return (Boolean) getValue(4);
	}

	/**
	 * Setter for <code>public.user_tokens.token_type</code>.
	 */
	public void setTokenType(TokenType value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>public.user_tokens.token_type</code>.
	 */
	@Column(name = "token_type", nullable = false)
	@NotNull
	public TokenType getTokenType() {
		return (TokenType) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<UUID> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<UUID, UUID, Instant, Instant, Boolean, TokenType> fieldsRow() {
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<UUID, UUID, Instant, Instant, Boolean, TokenType> valuesRow() {
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field1() {
		return UserTokensTable.USER_TOKENS.UUID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field2() {
		return UserTokensTable.USER_TOKENS.USER_UUID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Instant> field3() {
		return UserTokensTable.USER_TOKENS.CREATED_AT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Instant> field4() {
		return UserTokensTable.USER_TOKENS.EXPIRES_AT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field5() {
		return UserTokensTable.USER_TOKENS.VALID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<TokenType> field6() {
		return UserTokensTable.USER_TOKENS.TOKEN_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value1() {
		return getUuid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value2() {
		return getUserUuid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Instant value3() {
		return getCreatedAt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Instant value4() {
		return getExpiresAt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value5() {
		return getValid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TokenType value6() {
		return getTokenType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserTokensRecord value1(UUID value) {
		setUuid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserTokensRecord value2(UUID value) {
		setUserUuid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserTokensRecord value3(Instant value) {
		setCreatedAt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserTokensRecord value4(Instant value) {
		setExpiresAt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserTokensRecord value5(Boolean value) {
		setValid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserTokensRecord value6(TokenType value) {
		setTokenType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserTokensRecord values(UUID value1, UUID value2, Instant value3, Instant value4, Boolean value5, TokenType value6) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached UserTokensRecord
	 */
	public UserTokensRecord() {
		super(UserTokensTable.USER_TOKENS);
	}

	/**
	 * Create a detached, initialised UserTokensRecord
	 */
	public UserTokensRecord(UUID uuid, UUID userUuid, Instant createdAt, Instant expiresAt, Boolean valid, TokenType tokenType) {
		super(UserTokensTable.USER_TOKENS);

		setValue(0, uuid);
		setValue(1, userUuid);
		setValue(2, createdAt);
		setValue(3, expiresAt);
		setValue(4, valid);
		setValue(5, tokenType);
	}
}
