/**
 * This class is generated by jOOQ
 */
package io.ehdev.conrad.db.tables;


import io.ehdev.conrad.db.Keys;
import io.ehdev.conrad.db.Public;
import io.ehdev.conrad.db.tables.records.ProjectDetailsRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectDetailsTable extends TableImpl<ProjectDetailsRecord> {

    private static final long serialVersionUID = 765531245;

    /**
     * The reference instance of <code>public.project_details</code>
     */
    public static final ProjectDetailsTable PROJECT_DETAILS = new ProjectDetailsTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProjectDetailsRecord> getRecordType() {
        return ProjectDetailsRecord.class;
    }

    /**
     * The column <code>public.project_details.uuid</code>.
     */
    public final TableField<ProjectDetailsRecord, UUID> UUID = createField("uuid", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("uuid_generate_v4()", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>public.project_details.project_name</code>.
     */
    public final TableField<ProjectDetailsRecord, String> PROJECT_NAME = createField("project_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * Create a <code>public.project_details</code> table reference
     */
    public ProjectDetailsTable() {
        this("project_details", null);
    }

    /**
     * Create an aliased <code>public.project_details</code> table reference
     */
    public ProjectDetailsTable(String alias) {
        this(alias, PROJECT_DETAILS);
    }

    private ProjectDetailsTable(String alias, Table<ProjectDetailsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProjectDetailsTable(String alias, Table<ProjectDetailsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProjectDetailsRecord> getPrimaryKey() {
        return Keys.PROJECT_DETAILS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProjectDetailsRecord>> getKeys() {
        return Arrays.<UniqueKey<ProjectDetailsRecord>>asList(Keys.PROJECT_DETAILS_PKEY, Keys.PROJECT_DETAILS_PROJECT_NAME_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectDetailsTable as(String alias) {
        return new ProjectDetailsTable(alias, this);
    }

    /**
     * Rename this table
     */
    public ProjectDetailsTable rename(String name) {
        return new ProjectDetailsTable(name, null);
    }
}
