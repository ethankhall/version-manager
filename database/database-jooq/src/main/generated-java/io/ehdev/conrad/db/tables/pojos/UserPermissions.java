/**
 * This class is generated by jOOQ
 */
package io.ehdev.conrad.db.tables.pojos;


import java.io.Serializable;
import java.util.UUID;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "user_permissions", schema = "public", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"project_name", "repo_name", "user_uuid"}),
	@UniqueConstraint(columnNames = {"project_uuid", "repo_details_uuid", "user_uuid"})
})
public class UserPermissions implements Serializable {

	private static final long serialVersionUID = 100616275;

	private UUID    uuid;
	private String  projectName;
	private String  repoName;
	private UUID    projectUuid;
	private UUID    repoDetailsUuid;
	private UUID    userUuid;
	private Integer permissions;

	public UserPermissions() {}

	public UserPermissions(UserPermissions value) {
		this.uuid = value.uuid;
		this.projectName = value.projectName;
		this.repoName = value.repoName;
		this.projectUuid = value.projectUuid;
		this.repoDetailsUuid = value.repoDetailsUuid;
		this.userUuid = value.userUuid;
		this.permissions = value.permissions;
	}

	public UserPermissions(
		UUID    uuid,
		String  projectName,
		String  repoName,
		UUID    projectUuid,
		UUID    repoDetailsUuid,
		UUID    userUuid,
		Integer permissions
	) {
		this.uuid = uuid;
		this.projectName = projectName;
		this.repoName = repoName;
		this.projectUuid = projectUuid;
		this.repoDetailsUuid = repoDetailsUuid;
		this.userUuid = userUuid;
		this.permissions = permissions;
	}

	@Id
	@Column(name = "uuid", unique = true, nullable = false)
	@NotNull
	public UUID getUuid() {
		return this.uuid;
	}

	public void setUuid(UUID uuid) {
		this.uuid = uuid;
	}

	@Column(name = "project_name", nullable = false, length = 255)
	@NotNull
	@Size(max = 255)
	public String getProjectName() {
		return this.projectName;
	}

	public void setProjectName(String projectName) {
		this.projectName = projectName;
	}

	@Column(name = "repo_name", length = 255)
	@Size(max = 255)
	public String getRepoName() {
		return this.repoName;
	}

	public void setRepoName(String repoName) {
		this.repoName = repoName;
	}

	@Column(name = "project_uuid", nullable = false)
	@NotNull
	public UUID getProjectUuid() {
		return this.projectUuid;
	}

	public void setProjectUuid(UUID projectUuid) {
		this.projectUuid = projectUuid;
	}

	@Column(name = "repo_details_uuid")
	public UUID getRepoDetailsUuid() {
		return this.repoDetailsUuid;
	}

	public void setRepoDetailsUuid(UUID repoDetailsUuid) {
		this.repoDetailsUuid = repoDetailsUuid;
	}

	@Column(name = "user_uuid", nullable = false)
	@NotNull
	public UUID getUserUuid() {
		return this.userUuid;
	}

	public void setUserUuid(UUID userUuid) {
		this.userUuid = userUuid;
	}

	@Column(name = "permissions", nullable = false, precision = 32)
	@NotNull
	public Integer getPermissions() {
		return this.permissions;
	}

	public void setPermissions(Integer permissions) {
		this.permissions = permissions;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("UserPermissions (");

		sb.append(uuid);
		sb.append(", ").append(projectName);
		sb.append(", ").append(repoName);
		sb.append(", ").append(projectUuid);
		sb.append(", ").append(repoDetailsUuid);
		sb.append(", ").append(userUuid);
		sb.append(", ").append(permissions);

		sb.append(")");
		return sb.toString();
	}
}
