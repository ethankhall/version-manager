/**
 * This class is generated by jOOQ
 */
package io.ehdev.conrad.db.tables.daos;


import io.ehdev.conrad.db.enums.TokenType;
import io.ehdev.conrad.db.tables.TokenAuthenticationsTable;
import io.ehdev.conrad.db.tables.pojos.TokenAuthentications;
import io.ehdev.conrad.db.tables.records.TokenAuthenticationsRecord;

import java.time.Instant;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TokenAuthenticationsDao extends DAOImpl<TokenAuthenticationsRecord, TokenAuthentications, UUID> {

	/**
	 * Create a new TokenAuthenticationsDao without any configuration
	 */
	public TokenAuthenticationsDao() {
		super(TokenAuthenticationsTable.TOKEN_AUTHENTICATIONS, TokenAuthentications.class);
	}

	/**
	 * Create a new TokenAuthenticationsDao with an attached configuration
	 */
	public TokenAuthenticationsDao(Configuration configuration) {
		super(TokenAuthenticationsTable.TOKEN_AUTHENTICATIONS, TokenAuthentications.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected UUID getId(TokenAuthentications object) {
		return object.getUuid();
	}

	/**
	 * Fetch records that have <code>uuid IN (values)</code>
	 */
	public List<TokenAuthentications> fetchByUuid(UUID... values) {
		return fetch(TokenAuthenticationsTable.TOKEN_AUTHENTICATIONS.UUID, values);
	}

	/**
	 * Fetch a unique record that has <code>uuid = value</code>
	 */
	public TokenAuthentications fetchOneByUuid(UUID value) {
		return fetchOne(TokenAuthenticationsTable.TOKEN_AUTHENTICATIONS.UUID, value);
	}

	/**
	 * Fetch records that have <code>created_at IN (values)</code>
	 */
	public List<TokenAuthentications> fetchByCreatedAt(Instant... values) {
		return fetch(TokenAuthenticationsTable.TOKEN_AUTHENTICATIONS.CREATED_AT, values);
	}

	/**
	 * Fetch records that have <code>expires_at IN (values)</code>
	 */
	public List<TokenAuthentications> fetchByExpiresAt(Instant... values) {
		return fetch(TokenAuthenticationsTable.TOKEN_AUTHENTICATIONS.EXPIRES_AT, values);
	}

	/**
	 * Fetch records that have <code>valid IN (values)</code>
	 */
	public List<TokenAuthentications> fetchByValid(Boolean... values) {
		return fetch(TokenAuthenticationsTable.TOKEN_AUTHENTICATIONS.VALID, values);
	}

	/**
	 * Fetch records that have <code>token_type IN (values)</code>
	 */
	public List<TokenAuthentications> fetchByTokenType(TokenType... values) {
		return fetch(TokenAuthenticationsTable.TOKEN_AUTHENTICATIONS.TOKEN_TYPE, values);
	}
}
