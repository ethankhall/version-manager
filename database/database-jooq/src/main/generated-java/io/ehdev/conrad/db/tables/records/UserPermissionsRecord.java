/**
 * This class is generated by jOOQ
 */
package io.ehdev.conrad.db.tables.records;


import io.ehdev.conrad.db.tables.UserPermissionsTable;

import java.util.UUID;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "user_permissions", schema = "public", uniqueConstraints = {
    @UniqueConstraint(columnNames = {"project_uuid", "repo_details_uuid", "user_uuid"})
})
public class UserPermissionsRecord extends UpdatableRecordImpl<UserPermissionsRecord> implements Record5<UUID, UUID, UUID, UUID, Integer> {

    private static final long serialVersionUID = -1260537112;

    /**
     * Setter for <code>public.user_permissions.uuid</code>.
     */
    public void setUuid(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.user_permissions.uuid</code>.
     */
    @Id
    @Column(name = "uuid", unique = true, nullable = false)
    public UUID getUuid() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.user_permissions.project_uuid</code>.
     */
    public void setProjectUuid(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.user_permissions.project_uuid</code>.
     */
    @Column(name = "project_uuid", nullable = false)
    @NotNull
    public UUID getProjectUuid() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.user_permissions.repo_details_uuid</code>.
     */
    public void setRepoDetailsUuid(UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.user_permissions.repo_details_uuid</code>.
     */
    @Column(name = "repo_details_uuid")
    public UUID getRepoDetailsUuid() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.user_permissions.user_uuid</code>.
     */
    public void setUserUuid(UUID value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.user_permissions.user_uuid</code>.
     */
    @Column(name = "user_uuid", nullable = false)
    @NotNull
    public UUID getUserUuid() {
        return (UUID) get(3);
    }

    /**
     * Setter for <code>public.user_permissions.permissions</code>.
     */
    public void setPermissions(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.user_permissions.permissions</code>.
     */
    @Column(name = "permissions", nullable = false, precision = 32)
    @NotNull
    public Integer getPermissions() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<UUID, UUID, UUID, UUID, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<UUID, UUID, UUID, UUID, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field1() {
        return UserPermissionsTable.USER_PERMISSIONS.UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field2() {
        return UserPermissionsTable.USER_PERMISSIONS.PROJECT_UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field3() {
        return UserPermissionsTable.USER_PERMISSIONS.REPO_DETAILS_UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field4() {
        return UserPermissionsTable.USER_PERMISSIONS.USER_UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return UserPermissionsTable.USER_PERMISSIONS.PERMISSIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value1() {
        return getUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value2() {
        return getProjectUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value3() {
        return getRepoDetailsUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value4() {
        return getUserUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getPermissions();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserPermissionsRecord value1(UUID value) {
        setUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserPermissionsRecord value2(UUID value) {
        setProjectUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserPermissionsRecord value3(UUID value) {
        setRepoDetailsUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserPermissionsRecord value4(UUID value) {
        setUserUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserPermissionsRecord value5(Integer value) {
        setPermissions(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserPermissionsRecord values(UUID value1, UUID value2, UUID value3, UUID value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserPermissionsRecord
     */
    public UserPermissionsRecord() {
        super(UserPermissionsTable.USER_PERMISSIONS);
    }

    /**
     * Create a detached, initialised UserPermissionsRecord
     */
    public UserPermissionsRecord(UUID uuid, UUID projectUuid, UUID repoDetailsUuid, UUID userUuid, Integer permissions) {
        super(UserPermissionsTable.USER_PERMISSIONS);

        set(0, uuid);
        set(1, projectUuid);
        set(2, repoDetailsUuid);
        set(3, userUuid);
        set(4, permissions);
    }
}
