/**
 * This class is generated by jOOQ
 */
package io.ehdev.conrad.db.tables.daos;


import io.ehdev.conrad.db.tables.UserDetailsTable;
import io.ehdev.conrad.db.tables.pojos.UserDetails;
import io.ehdev.conrad.db.tables.records.UserDetailsRecord;

import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserDetailsDao extends DAOImpl<UserDetailsRecord, UserDetails, UUID> {

	/**
	 * Create a new UserDetailsDao without any configuration
	 */
	public UserDetailsDao() {
		super(UserDetailsTable.USER_DETAILS, UserDetails.class);
	}

	/**
	 * Create a new UserDetailsDao with an attached configuration
	 */
	public UserDetailsDao(Configuration configuration) {
		super(UserDetailsTable.USER_DETAILS, UserDetails.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected UUID getId(UserDetails object) {
		return object.getUuid();
	}

	/**
	 * Fetch records that have <code>uuid IN (values)</code>
	 */
	public List<UserDetails> fetchByUuid(UUID... values) {
		return fetch(UserDetailsTable.USER_DETAILS.UUID, values);
	}

	/**
	 * Fetch a unique record that has <code>uuid = value</code>
	 */
	public UserDetails fetchOneByUuid(UUID value) {
		return fetchOne(UserDetailsTable.USER_DETAILS.UUID, value);
	}

	/**
	 * Fetch records that have <code>user_id IN (values)</code>
	 */
	public List<UserDetails> fetchByUserId(String... values) {
		return fetch(UserDetailsTable.USER_DETAILS.USER_ID, values);
	}

	/**
	 * Fetch a unique record that has <code>user_id = value</code>
	 */
	public UserDetails fetchOneByUserId(String value) {
		return fetchOne(UserDetailsTable.USER_DETAILS.USER_ID, value);
	}

	/**
	 * Fetch records that have <code>name IN (values)</code>
	 */
	public List<UserDetails> fetchByName(String... values) {
		return fetch(UserDetailsTable.USER_DETAILS.NAME, values);
	}

	/**
	 * Fetch records that have <code>email_address IN (values)</code>
	 */
	public List<UserDetails> fetchByEmailAddress(String... values) {
		return fetch(UserDetailsTable.USER_DETAILS.EMAIL_ADDRESS, values);
	}
}
