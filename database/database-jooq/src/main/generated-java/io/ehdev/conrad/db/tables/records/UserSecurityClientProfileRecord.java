/**
 * This class is generated by jOOQ
 */
package io.ehdev.conrad.db.tables.records;


import io.ehdev.conrad.db.tables.UserSecurityClientProfileTable;

import java.util.UUID;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "user_security_client_profile", schema = "public", uniqueConstraints = {
    @UniqueConstraint(columnNames = {"provider_type", "provider_user_id"})
})
public class UserSecurityClientProfileRecord extends UpdatableRecordImpl<UserSecurityClientProfileRecord> implements Record4<UUID, UUID, String, String> {

    private static final long serialVersionUID = -867165963;

    /**
     * Setter for <code>public.user_security_client_profile.uuid</code>.
     */
    public void setUuid(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.user_security_client_profile.uuid</code>.
     */
    @Id
    @Column(name = "uuid", unique = true, nullable = false)
    public UUID getUuid() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.user_security_client_profile.user_uuid</code>.
     */
    public void setUserUuid(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.user_security_client_profile.user_uuid</code>.
     */
    @Column(name = "user_uuid", nullable = false)
    @NotNull
    public UUID getUserUuid() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.user_security_client_profile.provider_type</code>.
     */
    public void setProviderType(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.user_security_client_profile.provider_type</code>.
     */
    @Column(name = "provider_type", nullable = false, length = 64)
    @NotNull
    @Size(max = 64)
    public String getProviderType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.user_security_client_profile.provider_user_id</code>.
     */
    public void setProviderUserId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.user_security_client_profile.provider_user_id</code>.
     */
    @Column(name = "provider_user_id", nullable = false, length = 128)
    @NotNull
    @Size(max = 128)
    public String getProviderUserId() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<UUID, UUID, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<UUID, UUID, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field1() {
        return UserSecurityClientProfileTable.USER_SECURITY_CLIENT_PROFILE.UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field2() {
        return UserSecurityClientProfileTable.USER_SECURITY_CLIENT_PROFILE.USER_UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return UserSecurityClientProfileTable.USER_SECURITY_CLIENT_PROFILE.PROVIDER_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return UserSecurityClientProfileTable.USER_SECURITY_CLIENT_PROFILE.PROVIDER_USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value1() {
        return getUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value2() {
        return getUserUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getProviderType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getProviderUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserSecurityClientProfileRecord value1(UUID value) {
        setUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserSecurityClientProfileRecord value2(UUID value) {
        setUserUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserSecurityClientProfileRecord value3(String value) {
        setProviderType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserSecurityClientProfileRecord value4(String value) {
        setProviderUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserSecurityClientProfileRecord values(UUID value1, UUID value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserSecurityClientProfileRecord
     */
    public UserSecurityClientProfileRecord() {
        super(UserSecurityClientProfileTable.USER_SECURITY_CLIENT_PROFILE);
    }

    /**
     * Create a detached, initialised UserSecurityClientProfileRecord
     */
    public UserSecurityClientProfileRecord(UUID uuid, UUID userUuid, String providerType, String providerUserId) {
        super(UserSecurityClientProfileTable.USER_SECURITY_CLIENT_PROFILE);

        set(0, uuid);
        set(1, userUuid);
        set(2, providerType);
        set(3, providerUserId);
    }
}
