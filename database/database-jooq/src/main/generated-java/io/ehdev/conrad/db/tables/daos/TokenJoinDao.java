/**
 * This class is generated by jOOQ
 */
package io.ehdev.conrad.db.tables.daos;


import io.ehdev.conrad.db.tables.TokenJoinTable;
import io.ehdev.conrad.db.tables.pojos.TokenJoin;
import io.ehdev.conrad.db.tables.records.TokenJoinRecord;

import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TokenJoinDao extends DAOImpl<TokenJoinRecord, TokenJoin, UUID> {

	/**
	 * Create a new TokenJoinDao without any configuration
	 */
	public TokenJoinDao() {
		super(TokenJoinTable.TOKEN_JOIN, TokenJoin.class);
	}

	/**
	 * Create a new TokenJoinDao with an attached configuration
	 */
	public TokenJoinDao(Configuration configuration) {
		super(TokenJoinTable.TOKEN_JOIN, TokenJoin.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected UUID getId(TokenJoin object) {
		return object.getUuid();
	}

	/**
	 * Fetch records that have <code>uuid IN (values)</code>
	 */
	public List<TokenJoin> fetchByUuid(UUID... values) {
		return fetch(TokenJoinTable.TOKEN_JOIN.UUID, values);
	}

	/**
	 * Fetch a unique record that has <code>uuid = value</code>
	 */
	public TokenJoin fetchOneByUuid(UUID value) {
		return fetchOne(TokenJoinTable.TOKEN_JOIN.UUID, value);
	}

	/**
	 * Fetch records that have <code>token IN (values)</code>
	 */
	public List<TokenJoin> fetchByToken(UUID... values) {
		return fetch(TokenJoinTable.TOKEN_JOIN.TOKEN, values);
	}

	/**
	 * Fetch a unique record that has <code>token = value</code>
	 */
	public TokenJoin fetchOneByToken(UUID value) {
		return fetchOne(TokenJoinTable.TOKEN_JOIN.TOKEN, value);
	}

	/**
	 * Fetch records that have <code>project_uuid IN (values)</code>
	 */
	public List<TokenJoin> fetchByProjectUuid(UUID... values) {
		return fetch(TokenJoinTable.TOKEN_JOIN.PROJECT_UUID, values);
	}

	/**
	 * Fetch records that have <code>repo_uuid IN (values)</code>
	 */
	public List<TokenJoin> fetchByRepoUuid(UUID... values) {
		return fetch(TokenJoinTable.TOKEN_JOIN.REPO_UUID, values);
	}

	/**
	 * Fetch records that have <code>user_uuid IN (values)</code>
	 */
	public List<TokenJoin> fetchByUserUuid(UUID... values) {
		return fetch(TokenJoinTable.TOKEN_JOIN.USER_UUID, values);
	}
}
