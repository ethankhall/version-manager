/**
 * This class is generated by jOOQ
 */
package io.ehdev.conrad.db.tables;


import io.ehdev.conrad.db.Keys;
import io.ehdev.conrad.db.Public;
import io.ehdev.conrad.db.tables.records.UserPermissionsRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserPermissionsTable extends TableImpl<UserPermissionsRecord> {

    private static final long serialVersionUID = 518143647;

    /**
     * The reference instance of <code>public.user_permissions</code>
     */
    public static final UserPermissionsTable USER_PERMISSIONS = new UserPermissionsTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserPermissionsRecord> getRecordType() {
        return UserPermissionsRecord.class;
    }

    /**
     * The column <code>public.user_permissions.uuid</code>.
     */
    public final TableField<UserPermissionsRecord, UUID> UUID = createField("uuid", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("uuid_generate_v4()", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>public.user_permissions.project_uuid</code>.
     */
    public final TableField<UserPermissionsRecord, UUID> PROJECT_UUID = createField("project_uuid", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.user_permissions.repo_details_uuid</code>.
     */
    public final TableField<UserPermissionsRecord, UUID> REPO_DETAILS_UUID = createField("repo_details_uuid", org.jooq.impl.SQLDataType.UUID, this, "");

    /**
     * The column <code>public.user_permissions.user_uuid</code>.
     */
    public final TableField<UserPermissionsRecord, UUID> USER_UUID = createField("user_uuid", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.user_permissions.permissions</code>.
     */
    public final TableField<UserPermissionsRecord, Integer> PERMISSIONS = createField("permissions", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.user_permissions</code> table reference
     */
    public UserPermissionsTable() {
        this("user_permissions", null);
    }

    /**
     * Create an aliased <code>public.user_permissions</code> table reference
     */
    public UserPermissionsTable(String alias) {
        this(alias, USER_PERMISSIONS);
    }

    private UserPermissionsTable(String alias, Table<UserPermissionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserPermissionsTable(String alias, Table<UserPermissionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserPermissionsRecord> getPrimaryKey() {
        return Keys.USER_PERMISSIONS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserPermissionsRecord>> getKeys() {
        return Arrays.<UniqueKey<UserPermissionsRecord>>asList(Keys.USER_PERMISSIONS_PKEY, Keys.USER_PERMISSIONS_PROJECT_UUID_REPO_DETAILS_UUID_USER_UUID_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserPermissionsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserPermissionsRecord, ?>>asList(Keys.USER_PERMISSIONS__USER_PERMISSIONS_PROJECT_UUID_FKEY, Keys.USER_PERMISSIONS__USER_PERMISSIONS_REPO_DETAILS_UUID_FKEY, Keys.USER_PERMISSIONS__USER_PERMISSIONS_USER_UUID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserPermissionsTable as(String alias) {
        return new UserPermissionsTable(alias, this);
    }

    /**
     * Rename this table
     */
    public UserPermissionsTable rename(String name) {
        return new UserPermissionsTable(name, null);
    }
}
