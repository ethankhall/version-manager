/**
 * This class is generated by jOOQ
 */
package io.ehdev.conrad.db.tables;


import io.ehdev.conrad.db.Keys;
import io.ehdev.conrad.db.Public;
import io.ehdev.conrad.db.tables.records.WatcherRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WatcherTable extends TableImpl<WatcherRecord> {

    private static final long serialVersionUID = -1526040383;

    /**
     * The reference instance of <code>public.watcher</code>
     */
    public static final WatcherTable WATCHER = new WatcherTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WatcherRecord> getRecordType() {
        return WatcherRecord.class;
    }

    /**
     * The column <code>public.watcher.uuid</code>.
     */
    public final TableField<WatcherRecord, UUID> UUID = createField("uuid", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("uuid_generate_v4()", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>public.watcher.user_uuid</code>.
     */
    public final TableField<WatcherRecord, UUID> USER_UUID = createField("user_uuid", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.watcher.project_details_uuid</code>.
     */
    public final TableField<WatcherRecord, UUID> PROJECT_DETAILS_UUID = createField("project_details_uuid", org.jooq.impl.SQLDataType.UUID, this, "");

    /**
     * The column <code>public.watcher.repo_details_uuid</code>.
     */
    public final TableField<WatcherRecord, UUID> REPO_DETAILS_UUID = createField("repo_details_uuid", org.jooq.impl.SQLDataType.UUID, this, "");

    /**
     * Create a <code>public.watcher</code> table reference
     */
    public WatcherTable() {
        this("watcher", null);
    }

    /**
     * Create an aliased <code>public.watcher</code> table reference
     */
    public WatcherTable(String alias) {
        this(alias, WATCHER);
    }

    private WatcherTable(String alias, Table<WatcherRecord> aliased) {
        this(alias, aliased, null);
    }

    private WatcherTable(String alias, Table<WatcherRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WatcherRecord> getPrimaryKey() {
        return Keys.WATCHER_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WatcherRecord>> getKeys() {
        return Arrays.<UniqueKey<WatcherRecord>>asList(Keys.WATCHER_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<WatcherRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<WatcherRecord, ?>>asList(Keys.WATCHER__WATCHER_USER_UUID_FKEY, Keys.WATCHER__WATCHER_PROJECT_DETAILS_UUID_FKEY, Keys.WATCHER__WATCHER_REPO_DETAILS_UUID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WatcherTable as(String alias) {
        return new WatcherTable(alias, this);
    }

    /**
     * Rename this table
     */
    public WatcherTable rename(String name) {
        return new WatcherTable(name, null);
    }
}
