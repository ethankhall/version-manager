/**
 * This class is generated by jOOQ
 */
package io.ehdev.conrad.db.tables;


import io.ehdev.conrad.db.Keys;
import io.ehdev.conrad.db.Public;
import io.ehdev.conrad.db.tables.records.AclClassRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AclClassTable extends TableImpl<AclClassRecord> {

    private static final long serialVersionUID = -845818729;

    /**
     * The reference instance of <code>public.acl_class</code>
     */
    public static final AclClassTable ACL_CLASS = new AclClassTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AclClassRecord> getRecordType() {
        return AclClassRecord.class;
    }

    /**
     * The column <code>public.acl_class.id</code>.
     */
    public final TableField<AclClassRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('acl_class_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.acl_class.class</code>.
     */
    public final TableField<AclClassRecord, String> CLASS = createField("class", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * Create a <code>public.acl_class</code> table reference
     */
    public AclClassTable() {
        this("acl_class", null);
    }

    /**
     * Create an aliased <code>public.acl_class</code> table reference
     */
    public AclClassTable(String alias) {
        this(alias, ACL_CLASS);
    }

    private AclClassTable(String alias, Table<AclClassRecord> aliased) {
        this(alias, aliased, null);
    }

    private AclClassTable(String alias, Table<AclClassRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AclClassRecord, Long> getIdentity() {
        return Keys.IDENTITY_ACL_CLASS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AclClassRecord> getPrimaryKey() {
        return Keys.ACL_CLASS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AclClassRecord>> getKeys() {
        return Arrays.<UniqueKey<AclClassRecord>>asList(Keys.ACL_CLASS_PKEY, Keys.UNIQUE_UK_2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AclClassTable as(String alias) {
        return new AclClassTable(alias, this);
    }

    /**
     * Rename this table
     */
    public AclClassTable rename(String name) {
        return new AclClassTable(name, null);
    }
}
