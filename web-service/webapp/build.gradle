buildscript {
    ext {
        springBootVersion = '1.4.0.M1'
    }
    repositories {
        mavenCentral()
        maven {
            url 'http://repo.spring.io/milestone'
        }
        maven {
            url 'https://repo.spring.io/libs-milestone'
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'local-dev'
apply plugin: 'spring-boot'
apply from: "$rootDir/gradle/publishing.gradle"

artifactoryPublish.dependsOn assemble

dependencies {
    compile project(":api:rest-model")
    compile project(":database:database-api")
    compile project(":database:database-impl")
    compile project(":web-service:version-management")
    compile project(":web-service:api-project")
    compile project(":auth:authentication:default")
    compile project(":auth:authentication:core")

    //Caching
    compile libraries.springContextSupport
    compile 'net.sf.ehcache:ehcache:2.8.3'

    //Spring
    compile libraries.springBootWebapp

    //Hibernate
//    compile libraries.hibernate

    //Misc
    compile 'ch.qos.logback:logback-classic:1.1.3'
    compile 'com.google.code.findbugs:jsr305:3.0.1'
    compile libraries.dropwizard

    testCompile project(":test-utils")
    testCompile libraries.groovy
    testCompile libraries.spock
    testCompile libraries.spockSpring

    testCompile libraries.springTest
    testCompile libraries.jsonPath

    testCompile libraries.testing
}

task copyFileIntoDockerDir(type: Copy, dependsOn: assemble) {
    from jar
    from file('src/main/docker')
    into project.file("$buildDir/docker")
    rename "${project.name}-.*.jar", 'webapp.jar'
}

//task buildDocker(type: Docker, dependsOn: assemble) {
//    push = project.hasProperty("dockerPush")
//    applicationName = jar.baseName
//    dockerfile = file('src/main/docker/Dockerfile')
//    tag = "ehdev-docker-dockerv2-virtual.artifactoryonline.com/conrad/${applicationName}"
//    doFirst {
//        copy {
//            from jar
//            into stageDir
//            rename "${project.name}-.*.jar", 'webapp.jar'
//        }
//    }
//}
