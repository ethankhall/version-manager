apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'kotlin'
apply plugin: 'io.ehdev.gradle.development'
apply plugin: 'org.springframework.boot'
apply from: "$rootDir/gradle/publishing-private.gradle"

publish.dependsOn assemble

io.ehdev.gradle.internal.AddTestSourceSets.addSourceSet(project, 'apiDocsTest')

springBoot {
    executable = true
}

bootRun {
    addResources = true
}

configurations {
    swaggerCli
    apiDocsTestCompile.extendsFrom(integTestCompile)
}

dependencies {
    compile project(":api:rest-model")
    compile project(":internal:business-logic")
    compile project(":internal:version-bumper")
    compile project(":database:database-v2")
    compile project(":database:database-jooq")
    compile project(":database:database-migration")
    compile project(":internal:endpoints")
    compile project(":internal:shared-config")
    compile project(":internal:shared-model")
    compile project(':internal:authentication')
    compile project(':internal:authorization')
    compile libraries.kotlin

    //Spring
    compile libraries.springBoot
    compile 'org.springframework.boot:spring-boot-starter-actuator'

    //database
    compile libraries.database

    //Misc
    compile libraries.logging
    compile 'com.google.code.findbugs:jsr305:3.0.1'
    compile libraries.dropwizard

    testCompile libraries.testingLibraries
    testCompile libraries.springTest

    integTestCompile group: 'org.apache.httpcomponents', name: 'fluent-hc', version: '4.5.2'
    integTestCompile libraries.springBoot
    integTestCompile libraries.springBootTest
    integTestCompile libraries.springSecurityTest

    apiDocsTestCompile 'io.springfox:springfox-swagger2:2.6.1'

    swaggerCli 'io.swagger:swagger-codegen-cli:2.2.2'
}

def swaggerApiJson = new File(buildDir, 'swagger-api-docs.json').absolutePath
def swaggerApiHtml = new File(buildDir, 'swagger-html').absolutePath

apiDocsTest {
    systemProperty 'crom.version', project.version.toString()
    systemProperty 'swagger.docs', swaggerApiJson
}

tasks.create('swaggerHtml', JavaExec) {
    inputs.file(swaggerApiJson)
    outputs.dir(swaggerApiHtml)
    dependsOn apiDocsTest
    classpath configurations.swaggerCli
    main = 'io.swagger.codegen.SwaggerCodegen'
    args 'generate', '-i', swaggerApiJson, '-l', 'html2', '-o', swaggerApiHtml

    doFirst {
        new File(swaggerApiHtml).mkdirs()
    }
}

tasks.create('archiveSwagger', Zip) {
    dependsOn swaggerHtml
    from swaggerApiHtml
}
