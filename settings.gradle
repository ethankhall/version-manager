import groovy.json.JsonSlurper

pluginManagement {
    repositories {
        gradlePluginPortal()
        maven { url 'https://dl.bintray.com/ethankhall/crom/' }
        maven { url 'https://dl.bintray.com/ethankhall/gradle-plugins/' }
    }
    resolutionStrategy {
        def clients = new JsonSlurper().parse(new URL("http://api.crom.tech/api/v1/project/ethankhall/repo/version-manager-clients/version/latest"))
        def gradlePlugins = new JsonSlurper().parse(new URL("http://api.crom.tech/api/v1/project/ethankhall/repo/gradle-plugins/version/latest?filter=RELEASED"))
        eachPlugin { details ->
            def id = details.requested.id.id
            if (id == 'tech.crom.version-manager' && details.requested.version == 'LATEST') {
                println "Using the latest version of $id, which is ${clients.version}"
                details.useVersion(clients.version)
            }

            if (id in ['io.ehdev.gradle.dependency-resolve',
                       'io.ehdev.gradle.klint',
                       'io.ehdev.gradle.build-dir',
                       'io.ehdev.gradle.dependency-script',
                        'io.ehdev.gradle.development'] && details.requested.version == 'LATEST') {
                println "Using the latest version of $id, which is ${gradlePlugins.version}"
                details.useVersion(gradlePlugins.version)
            }
        }
    }
}

//shared
include ':internal:shared-config'
include ':internal:shared-model'

//web service - api's
include ':internal:endpoints'
include ':internal:webapp'

//database
include ':database:database-jooq'
include ':database:database-v2'
include ':database:database-migration'
include ':database:database-api-model'

//security
include ':internal:authentication'
include ':internal:authorization'

//api model
include ':api:rest-model'
include ':internal:business-logic'
include ':internal:version-bumper'
include ':internal:storage'
include ':internal:state-machine'

include ':load-test:gatling'
include ':docker'
