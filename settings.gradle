
pluginManagement {
    repositories {
        gradlePluginPortal()
        maven { url 'https://dl.bintray.com/ethankhall/gradle-plugins/' }
    }
    resolutionStrategy {
        eachPlugin { details ->
            def id = details.requested.id.id
            if (id in ['io.ehdev.gradle.dependency-resolve',
                       'io.ehdev.gradle.klint',
                       'io.ehdev.gradle.build-dir',
                       'io.ehdev.gradle.dependency-script',
                        'io.ehdev.gradle.development'] && details.requested.version == 'LATEST') {
                println "Using the latest version of $id, which is 0.0.30"
                details.useVersion('0.0.30')
            }
        }
    }
}

//shared
include ':internal:shared-config'
include ':internal:shared-model'

//web service - api's
include ':internal:endpoints'
include ':internal:webapp'

//database
include ':database:database-jooq'
include ':database:database-v2'
include ':database:database-migration'
include ':database:database-api-model'

//security
include ':internal:auth'

//api model
include ':api:rest-model'
include ':internal:business-logic'
include ':internal:version-bumper'
include ':internal:storage'
include ':internal:state-machine'
